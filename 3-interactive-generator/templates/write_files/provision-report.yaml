- path: /usr/local/sbin/provision-report.sh
  owner: root:root
  permissions: "0755"
  content: |
    #!/usr/bin/env bash
    set -Eeuo pipefail

    # ---------- Console colors ----------
    if [ -t 1 ]; then
      RED=$(tput setaf 1); GREEN=$(tput setaf 2); YEL=$(tput setaf 3); BOLD=$(tput bold); RESET=$(tput sgr0)
    else
      RED=; GREEN=; YEL=; BOLD=; RESET=
    fi
    OK="${GREEN}✔${RESET}"; ERR="${RED}✖${RESET}"; WARN="${YEL}⚠${RESET}"

    # ---------- Report plumbing ----------
    REPORT=/run/provision-report.txt
    : > "$REPORT"
    log(){ printf "%b\n" "$1" | tee -a "$REPORT" >/dev/null; }

    ok=true
    errc=0
    warnc=0

      # ---------- Load selections ----------
      # Source the selections file first
      [ -f /etc/provision-selections.env ] && source /etc/provision-selections.env

      # ---------- Selected components ----------
      # Set defaults in case sourcing failed
      SELECTED_K3S="${SELECTED_K3S:-0}"
      SELECTED_ARGOCD="${SELECTED_ARGOCD:-0}"
      SELECTED_TWINGATE="${SELECTED_TWINGATE:-0}"
      SELECTED_MONITORING="${SELECTED_MONITORING:-0}"
      SELECTED_BLINKSTICK="${SELECTED_BLINKSTICK:-0}"

      # ---------- Checks ----------
      [ -f /usr/local/sbin/blinkstick-helpers.sh ] && source /usr/local/sbin/blinkstick-helpers.sh    # Print selections
    echo "Selected components:" | tee -a "$REPORT"
    [[ "$SELECTED_K3S" == "1" ]] && echo "- k3s" | tee -a "$REPORT"
    [[ "$SELECTED_ARGOCD" == "1" ]] && echo "- argocd" | tee -a "$REPORT"
    [[ "$SELECTED_TWINGATE" == "1" ]] && echo "- twingate" | tee -a "$REPORT"
    [[ "$SELECTED_MONITORING" == "1" ]] && echo "- monitoring" | tee -a "$REPORT"
    [[ "$SELECTED_BLINKSTICK" == "1" ]] && echo "- blinkstick" | tee -a "$REPORT"
    echo | tee -a "$REPORT"

    # Helper to check and log service status
    check_service_active () {
      local unit="$1" label="$2"
      if systemctl is-active --quiet "$unit"; then
        log "${OK} ${BOLD}${label}${RESET} is active"
        bs_blink green 1
      else
        log "${ERR} ${BOLD}${label}${RESET} failed (see: journalctl -u ${unit} -b | tail -n 50)"
        ok=false; errc=$((errc+1))
        bs_blink red 1
      fi
    }

    # Check each selected component
    if [[ "$SELECTED_K3S" == "1" ]]; then
      wait_unit(){ u=$1; t=${2:-20}; while [ $t -gt 0 ]; do systemctl list-units --all --type=service --no-legend | grep -q "\b$u\b" && return 0; sleep 1; t=$((t-1)); done; return 1; }
      if wait_unit k3s-agent.service 30; then
        check_service_active k3s-agent "k3s-agent"
      elif wait_unit k3s.service 30; then
        check_service_active k3s "k3s (server)"
      else
        log "${ERR} k3s unit not found"; ok=false; errc=$((errc+1)); bs_blink red 1
      fi
    fi

    if [[ "$SELECTED_ARGOCD" == "1" ]]; then
      if systemctl list-unit-files --type=service --no-legend | grep -q '^argocd-server\.service'; then
        check_service_active argocd-server "argocd-server"
      else
        log "${WARN} ArgoCD not installed"; warnc=$((warnc+1))
      fi
    fi

    if [[ "$SELECTED_TWINGATE" == "1" ]]; then
      if systemctl list-unit-files --type=service --no-legend | grep -q '^twingate-connector\.service'; then
        check_service_active twingate-connector "twingate-connector"
      else
        log "${WARN} Twingate not installed"; warnc=$((warnc+1))
      fi
    fi

    if [[ "$SELECTED_MONITORING" == "1" ]]; then
      if systemctl list-unit-files --type=service --no-legend | grep -q '^node_exporter\.service'; then
        check_service_active node_exporter "node_exporter"
      else
        log "${WARN} node_exporter not installed"; warnc=$((warnc+1))
      fi
    fi

    if [[ "$SELECTED_BLINKSTICK" == "1" ]]; then
      if command -v blinkstick >/dev/null 2>&1; then
        log "${OK} BlinkStick CLI is available"
        bs_blink green 1
      else
        log "${WARN} BlinkStick CLI not installed"; warnc=$((warnc+1))
      fi
    fi

    # ---------- Overall status ----------
    ci_status="$(cloud-init status 2>/dev/null || true)"
    case "$ci_status" in
      *error*) ci_state="error" ;;
      *done*)  ci_state="done"  ;;
      *)       ci_state="unknown" ;;
    esac

    # Compose and print the report
    {
      echo
      echo "==== Provisioning summary on $(hostname) @ $(date -Is) ===="
      echo "cloud-init status: ${ci_status}"
      echo "errors: ${errc}, warnings: ${warnc}"
      cat "$REPORT"
      echo "==========================================================="
    } | tee -a /var/log/cloud-init-output.log | tee /etc/motd | tee /dev/console >/dev/null

    # ---------- Final LED state machine ----------
    if [ "$errc" -gt 0 ]; then
      if cloud-init status 2>/dev/null | grep -q 'error'; then
        bs_solid red
        exit 0
      fi
      nohup bash -c '
        source /usr/local/sbin/blinkstick-helpers.sh
        while true; do bs_blink yellow 3; sleep 1; bs_blink red '"$errc"'; sleep 2; done
      ' >/dev/null 2>&1 &
    else
      if cloud-init status 2>/dev/null | grep -q 'error'; then
        pid=$(bs_pulse red loop bg); sleep 60; bs_stop "$pid"
      else
        pid=$(bs_pulse green loop bg); sleep 60; bs_stop "$pid"
      fi
    fi
